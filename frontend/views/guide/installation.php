<h1>
    Установка
</h1>
<hr />
<p>
    Есть два способа установки Yii фреймворка:
</p>
<ul>
    <li>С помощью Composer (рекомендуется)</li>
    <li>Скачать шаблон приложения, содержащий все требования сайта, в том числе содержит сам фреймворк</li>
</ul>
<h2>
    Установка с помощью Composer
</h2>
<hr />
<p>
    Для проблем или получения дополнительной информации см. официальное руководство Composer'а:<br />
    <?php
    highlight_string("<?php
curl -s http://getcomposer.org/installer | php
?>");
    ?>
</p>
<p>
    Рекомендуемым способом установки Yii является использование менеджера пакетов - Composer. Если вы еще не установили Composer, вы можете скачать его с http://getcomposer.org/ или выполните следующую команду:
</p>
<ul>
    <li><a href="http://getcomposer.org/doc/00-intro.md#installation-nix" target="_blank">Linux</a></li>
    <li><a href="http://getcomposer.org/doc/00-intro.md#installation-windows" target="_blank">Windows</a></li>
</ul>
<p>
    С помощью установки через Composer вы можете создать новый сайт Yii, используя один из готовых к использованию шаблонов приложений Yii. В зависимости от ваших потребностей, выбирайте правильный шаблон для вашего проекта.
</p>
<p>
    В настоящее время существует два шаблона приложений:
</p>
<ul>
    <li>Базовый шаблон приложения - просто базовый frontend шаблон приложения.</li>
    <li>Расширенный шаблон приложения - состоит из фронтенд части, бэкенд части, консольных ресурсов, общего кода (доступного для фронтенд и бэкенд), а также поддержка для окружения (environments).</li>
</ul>
<p>
    Инструкции для установки этих шаблонов см. выше ссылки на другие ресурсы. Чтобы узнать больше об идеях, лежащих в этих шаблонах приложений и предполагаемого использования смотрите соответствующие странице по этим шаблонам.
</p>
<p>
    Если вы не хотите использовать готовый шаблон и хотите начать с нуля, то вы найдете информацию в документе о создании собственной структуры приложения. Это рекомендуется только для продвинутых пользователей.
</p>
<h2>
    Установка с помощью zip-архива
</h2>
<hr />
<p>
    Установка с помощью zip-архива состоит из двух этапов:
</p>
<ol>
    <li>Скачайте шаблон приложения с yiiframework.com.</li>
    <li>Распакуйте загруженный файл.</li>
</ol>
<p>
    Если вы хотите скачать только файлы фреймворка Yii, то вы можете скачать zip-архив непосредственно с GitHub. Для создания приложения вы можете выполнить действия, описанные в вашей собственной структуре приложения. Это рекомендуется только для продвинутых пользователей.
</p>
<blockquote>
    <p>
        Совет: Сам Yii фреймворк не должен быть установлен в директории, доступной через Интернет. Приложение Yii имеет один сценарий входа (index.php - фронт-контроллер), это обычно единственный файл, который должен быть абсолютно открыт для веб-пользователей (то есть, размещенных в веб-каталоге). Другие PHP скрипты, в том числе файлы фреймворка Yii, должны быть защищены от веб-доступа, чтобы предотвратить возможные хакерские атаки.
    </p>
</blockquote>
<h2>
    Требования
</h2>
<hr />
<p>
    После установки Yii, вы можете убедиться, что ваш сервер удовлетворяет требованиям Yii. Вы можете сделать это, запустив сценарий проверки соответствия требованиям в веб-браузере или из командной строки.
</p>
<p>
    Если вы установили шаблон приложения Yii с помощью zip или composer, то вы найдете файл requirements.php в корневом каталоге вашего приложения.
</p>
<p>
    Для того чтобы запустить этот сценарий в командной строке введите следующую команду:<br />
    <?php
    highlight_string("<?php
php requirements.php
?>");
    ?>
</p>
<p>
    Для того чтобы запустить этот сценарий в браузере, вы должны убедиться, что он доступнен для веб-сервера и вашего браузера http://hostname/path/to/yii-app/requirements.php. Если вы используете Linux, то можно создать мягкую ссылку, чтобы сделать его доступным с помощью следующей команды:<br />
    <?php
    highlight_string("<?php
ln -s requirements.php ../requirements.php
?>");
    ?>
</p>
<p>
    Для расширенного приложения requirements.php находится на два уровня выше, так что вы должны использовать <code>ln -s requirements.php ../../requirements.php.</code>
</p>
<p>
    Yii 2 требуется PHP 5.4.0 или выше. Yii был протестирован на серверах Apache HTTP и Nginx HTTP в Windows и Linux. Yii также может использоваться на других веб-серверах и платформах, при условии, что поддерживается PHP 5.4 или выше.
</p>
<h2>
    Рекомендуемая конфигурация Apache
</h2>
<hr />
<p>
    Yii готов работать с конфигурацией веб-сервера Apache по умолчанию. В качестве меры безопасности, Yii поставляется с файлом .htaccess в папке фреймворка, чтобы запретить доступ к этим ограниченным ресурсам.
</p>
<p>
    По умолчанию все запросы на страницы сайта, сделанного с использованием yii фреймворка перенаправляются на файл index.php (фронт-контроллер), который находится в веб-каталоге приложения. Результатом будут URL-адреса в формате http://hostname/index.php/controller/action/param/value.
</p>
<p>
    Чтобы скрыть файл начальной загрузки (index.php) в ваших URL, добавьте инструкции mod_rewrite в файл .htaccess в корневой каталог приложения (или добавьте инструкции по конфигурации виртуального хоста в конфигурационном файле httpd.conf, раздел Directory для вашего вебсервера). Соответствующие инструкции:<br />
    <?php
    highlight_string("<?php
RewriteEngine on

# If a directory or a file exists, use it directly
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
# Otherwise forward it to index.php
RewriteRule . index.php
?>");
    ?>
</p>
<h2>
    Рекомендуемая конфигурация Nginx
</h2>
<hr />
<p>
    Yii также может быть использован с популярным веб-сервером Nginx, РНР должен быть установлен как FPM SAPI. Вот образец простой настройки хоста для сайта на основе yii фреймворка на Nginx. Конфигурация сообщает серверу, чтобы он отправлял все запросы на несуществующие ресурсы на загрузочный файл, в результате чего возможны "красивые" URL без необходимости указания index.php.<br />
    <?php
    highlight_string("<?php
server {
    set \$yii_bootstrap \"index.php\";
    charset utf-8;
    client_max_body_size 128M;

    listen 80; ## listen for ipv4
    #listen [::]:80 default_server ipv6only=on; ## listen for ipv6

    server_name mysite.local;
    root        /path/to/project/web;
    index       \$yii_bootstrap;

    access_log  /path/to/project/log/access.log  main;
    error_log   /path/to/project/log/error.log;

    location / {
        # Redirect everything that isn't real file to yii bootstrap file including arguments.
        try_files \$uri \$uri/ /\$yii_bootstrap?\$args;
    }

    # uncomment to avoid processing of calls to unexisting static files by yii
    #location ~ \\.(js|css|png|jpg|gif|swf|ico|pdf|mov|fla|zip|rar)$ {
    #    try_files \$uri =404;
    #}
    #error_page 404 /404.html;

    location ~ \\.php$ {
        include fastcgi.conf;
        fastcgi_pass   127.0.0.1:9000;
        #fastcgi_pass unix:/var/run/php5-fpm.sock;
    }

    location ~ /\\.(ht|svn|git) {
        deny all;
    }
}
?>");
    ?>
</p>
<p>
    При использовании этой конфигурации, вы должны установить cgi.fix_pathinfo = 0 в файле php.ini, чтобы избежать многих ненужных системных вызовов stat().
</p>