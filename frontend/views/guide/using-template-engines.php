<h1>
    Использование шаблонизаторов
</h1>
<hr />
<p>
    По умолчанию Yii использует PHP в качестве шаблонизатора, но вы можете настроить Yii для поддержки других шаблонизаторов, таких как Twig или Smarty.
</p>
<p>
    Компонент view отвечает за рендеринг видов. Вы можете добавить пользовательские механизмы шаблонов с помощью повторного поведения этого компонента:<br />
    <?php
    highlight_string("<?php
[
    'components' => [
        'view' => [
            'class' => 'yii\\web\\View',
            'renderers' => [
                'tpl' => [
                    'class' => 'yii\\smarty\\ViewRenderer',
                    //'cachePath' => '@runtime/Smarty/cache',
                ],
                'twig' => [
                    'class' => 'yii\\twig\\ViewRenderer',
                    //'cachePath' => '@runtime/Twig/cache',
                    //'options' => [], /*  Array of twig options */
                    'globals' => ['html' => '\\yii\\helpers\\Html'],
                ],
                // ...
            ],
        ],
    ],
]
?>");
    ?>
</p>
<p>
    В приведенном выше коде Smarty и Twig настроены так, что они будут использоваться при просмотре файлов. Но для того, чтобы получить эти расширения в вашем проекте, вы должны также изменить свой файл ​​composer.json, чтобы включить их тоже:<br />
    <?php
    highlight_string('<?php
"yiisoft/yii2-smarty" : "*",
"yiisoft/yii2-twig" : "*",
?>');
    ?>
</p>
<p>
    Этот код будет добавлен в разделе "require" в composer.json. После внесения этого изменения, сохраните его, теперь вы можете установить расширения в командной строке команду на обновление: composer update --preder-dist.
</p>
<h2>
    Twig
</h2>
<hr />
<p>
    Для использования Twig, необходимо создать шаблоны в файлах, которые имеют расширение '.twig' (или использовать другое расширение файла, но настроить компонент соответственно). В отличие от стандартных файлов представления, при использовании Twig необходимо включить расширение в вашем вызове метода в контроллере $this->render() или $this->renderPartial():<br />
    <?php
    highlight_string("<?php
echo \$this->render('renderer.twig', ['username' => 'Alex']);
?>");
    ?>
</p>
<h3>
    Дополнительные функции
</h3>
<p>
    Yii добавляет следующий синтаксис к стандартному синтаксису Twig:<br />
    <?php
    highlight_string("<?php
<a href=\"{{ path('blog/view', {'alias' : post.alias}) }}\">{{ post.title }}</a>
?>");
    ?>
</p>
<p>
    Внутри функция path() вызывает Yii метод Html::url().
</p>
<h3>
    Дополнительные переменные
</h3>
<p>
    В шаблонах Twig вы можете также использовать эти переменные:
</p>
<ul>
    <li>app - приравнивается к \Yii::$app</li>
    <li>this - приравнивается к текщему объекту View</li>
</ul>
<h3>
    Глобальные
</h3>
<p>
    Вы можете добавить глобальных помощников или значения с помощью глобальных переменных для переменной конфигурации приложений. Вы можете определить как помощники Yii, так и свои собственные переменные так:<br />
    <?php
    highlight_string("<?php
'globals' => [
    'html' => '\\yii\\helpers\\Html',
    'name' => 'Carsten',
],
?>");
    ?>
</p>
<p>
    После настройки в шаблоне, вы можете использовать глобальные переменные следующим образом:<br />
    <?php
    highlight_string("<?php
Hello, {{name}}! {{ html.a('Please login', 'site/login') | raw }}.
?>");
    ?>
</p>
<h3>
    Дополнительные фильтры
</h3>
<p>
    Дополнительные фильтры могут быть добавлены с помощью опции фильтров в конфигурации приложения:<br />
    <?php
    highlight_string("<?php
'filters' => [
    'jsonEncode' => '\\yii\\helpers\\Json::encode',
],
?>");
    ?>
</p>
<p>
    Тогда в шаблоне вы можете использовать:<br />
    <?php
    highlight_string("<?php
{{ model|jsonEncode }}
?>");
    ?>
</p>
<h2>
    Smarty
</h2>
<hr />
<p>
    Для использования Smarty необходимо создать шаблоны в файлах, которые имеют расширение '.tpl' (или использовать другое расширение файла, но настроить компонент соответственно). В отличие от стандартных файлов представления, при использовании Smarty необходимо включить расширение в вашем контроллере при вызове метода $this->render() или $ $this->renderPartial():<br />
    <?php
    highlight_string("<?php
echo \$this->render('renderer.tpl', ['username' => 'Alex']);
?>");
    ?>
</p>
<h3>
    Дополнительные функции
</h3>
<p>
    Yii добавляет следующий синтаксис к стандартному синтаксису Smarty:<br />
    <?php
    highlight_string("<?php
<a href=\"{path route='blog/view' alias=\$post.alias}\">{\$post.title}</a>
?>");
    ?>
</p>
<p>
    Внутри функция path() вызывает Yii метод Html::url().
</p>
<h3>
    Дополнительные переменные
</h3>
<p>
    В шаблонах Smarty вы можете также использовать эти переменные:
</p>
<ul>
    <li>app - приравнивается к \Yii::$app</li>
    <li>this - приравнивается к текщему объекту View</li>
</ul>